{"ast":null,"code":"var _jsxFileName = \"D:\\\\DATN\\\\WebAdmin1\\\\src\\\\Screen\\\\Charts.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from 'react';\nimport { Chart, CategoryScale, LinearScale, BarController, BarElement, Title, Tooltip, Legend } from 'chart.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TopProductsChart = () => {\n  _s();\n  useEffect(() => {\n    // Register the necessary components for the chart\n    Chart.register(CategoryScale, LinearScale, BarController, BarElement, Title, Tooltip, Legend);\n    const getTop10 = async () => {\n      try {\n        const res = await fetch('http://localhost:6677/products/getTopProductSell');\n        const result = await res.json();\n        const labels = [];\n        const data = [];\n        result.data.forEach(element => {\n          labels.push(element.name);\n          data.push(Number(element.sold)); // Ensure quantity is a number\n        });\n        const ctx = document.getElementById('myChart').getContext('2d');\n        if (ctx) {\n          // Destroy old chart instance if it exists\n          if (Chart.getChart(\"myChart\")) {\n            Chart.getChart(\"myChart\").destroy();\n          }\n          new Chart(ctx, {\n            type: 'bar',\n            data: {\n              labels: labels,\n              datasets: [{\n                label: 'Lượt bán',\n                data: data,\n                borderWidth: 1,\n                backgroundColor: ['rgba(255, 99, 132, 0.6)',\n                // Color 1\n                'rgba(54, 162, 235, 0.6)',\n                // Color 2\n                'rgba(75, 192, 192, 0.6)' // Color 3\n                ],\n                borderColor: ['rgba(255, 99, 132, 1)',\n                // Border Color 1\n                'rgba(54, 162, 235, 1)',\n                // Border Color 2\n                'rgba(75, 192, 192, 1)' // Border Color 3\n                ]\n              }]\n            },\n            options: {\n              scales: {\n                y: {\n                  beginAtZero: true\n                }\n              }\n            }\n          });\n        }\n      } catch (error) {\n        console.log('Error fetching or displaying data:', error);\n      }\n    };\n    getTop10();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: 15\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Top 10 S\\u1EA3n Ph\\u1EA9m\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"canvas\", {\n      id: \"myChart\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 5\n  }, this);\n};\n_s(TopProductsChart, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c = TopProductsChart;\nexport default TopProductsChart;\nvar _c;\n$RefreshReg$(_c, \"TopProductsChart\");","map":{"version":3,"names":["React","useEffect","Chart","CategoryScale","LinearScale","BarController","BarElement","Title","Tooltip","Legend","jsxDEV","_jsxDEV","TopProductsChart","_s","register","getTop10","res","fetch","result","json","labels","data","forEach","element","push","name","Number","sold","ctx","document","getElementById","getContext","getChart","destroy","type","datasets","label","borderWidth","backgroundColor","borderColor","options","scales","y","beginAtZero","error","console","log","style","padding","children","fileName","_jsxFileName","lineNumber","columnNumber","id","_c","$RefreshReg$"],"sources":["D:/DATN/WebAdmin1/src/Screen/Charts.js"],"sourcesContent":["import React, { useEffect } from 'react';\r\nimport { Chart, CategoryScale, LinearScale, BarController, BarElement, Title, Tooltip, Legend } from 'chart.js';\r\n\r\nconst TopProductsChart = () => {\r\n  useEffect(() => {\r\n    // Register the necessary components for the chart\r\n    Chart.register(CategoryScale, LinearScale, BarController, BarElement, Title, Tooltip, Legend);\r\n\r\n    const getTop10 = async () => {\r\n      try {\r\n        const res = await fetch('http://localhost:6677/products/getTopProductSell');\r\n        const result = await res.json();\r\n        \r\n        const labels = [];\r\n        const data = [];\r\n        result.data.forEach(element => {\r\n          labels.push(element.name);\r\n          data.push(Number(element.sold));  // Ensure quantity is a number\r\n        });\r\n\r\n        const ctx = document.getElementById('myChart').getContext('2d');\r\n        if (ctx) {\r\n          // Destroy old chart instance if it exists\r\n          if (Chart.getChart(\"myChart\")) {\r\n            Chart.getChart(\"myChart\").destroy();\r\n          }\r\n\r\n          new Chart(ctx, {\r\n            type: 'bar',\r\n            data: {\r\n              labels: labels,\r\n              datasets: [{\r\n                label: 'Lượt bán',\r\n                data: data,\r\n                borderWidth: 1,\r\n                backgroundColor: [\r\n                  'rgba(255, 99, 132, 0.6)',  // Color 1\r\n                  'rgba(54, 162, 235, 0.6)',  // Color 2\r\n                  'rgba(75, 192, 192, 0.6)'   // Color 3\r\n                ],\r\n                borderColor: [\r\n                  'rgba(255, 99, 132, 1)',  // Border Color 1\r\n                  'rgba(54, 162, 235, 1)',  // Border Color 2\r\n                  'rgba(75, 192, 192, 1)'   // Border Color 3\r\n                ]\r\n              }]\r\n            },\r\n            options: {\r\n              scales: {\r\n                y: {\r\n                  beginAtZero: true\r\n                }\r\n              }\r\n            }\r\n          });\r\n        }\r\n      } catch (error) {\r\n        console.log('Error fetching or displaying data:', error);\r\n      }\r\n    };\r\n    getTop10();\r\n  }, []);\r\n\r\n  return (\r\n    <div style={{\r\n      padding: 15,\r\n      \r\n    }}>\r\n      <h1>Top 10 Sản Phẩm</h1>\r\n      <canvas id=\"myChart\"></canvas>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TopProductsChart;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}